{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar ASC = \"asc\";\nvar DESC = \"desc\";\nvar pushNotification = function(type, description) {\n    var message = document.createElement(\"div\");\n    var title = type.charAt(0).toUpperCase() + type.slice(1);\n    message.classList.add(\"notification\", type);\n    message.innerHTML = '\\n    <h2 class=\"title\">'.concat(title, \"</h2>\\n    <p>\").concat(description, \"</p>\\n  \");\n    message.style.top = \"10px\";\n    message.style.right = \"10px\";\n    message.setAttribute(\"data-qa\", \"notification\");\n    document.body.append(message);\n    setTimeout(function() {\n        message.remove();\n    }, 2000);\n};\nvar table = document.querySelector(\"table\");\nvar headers = document.querySelectorAll(\"th\");\nvar people = [];\nvar sortOrder = {\n    name: ASC,\n    position: ASC,\n    office: ASC,\n    age: ASC,\n    salary: ASC\n};\nvar initializePeopleArray = function() {\n    var trs = document.querySelectorAll(\"tr\");\n    trs.forEach(function(item, index) {\n        if (index === 0 || index === trs.length - 1) return;\n        item.addEventListener(\"click\", function() {\n            trs.forEach(function(tr) {\n                return tr.classList.remove(\"active\");\n            });\n            item.classList.add(\"active\");\n        });\n        var person = {\n            name: item.children[0].textContent,\n            position: item.children[1].textContent,\n            office: item.children[2].textContent,\n            age: parseInt(item.children[3].textContent),\n            salary: parseFloat(item.children[4].textContent.replace(/[$,]/g, \"\"))\n        };\n        people.push(person);\n    });\n};\nvar handleSort = function(e) {\n    switch(e.target.innerText){\n        case \"Name\":\n            if (sortOrder.name === ASC) {\n                people.sort(function(a, b) {\n                    return a.name.localeCompare(b.name);\n                });\n                sortOrder.name = DESC;\n                break;\n            }\n            people.sort(function(a, b) {\n                return b.name.localeCompare(a.name);\n            });\n            sortOrder.name = ASC;\n            break;\n        case \"Position\":\n            if (sortOrder.position === ASC) {\n                people.sort(function(a, b) {\n                    return a.position.localeCompare(b.position);\n                });\n                sortOrder.position = DESC;\n                break;\n            }\n            people.sort(function(a, b) {\n                return b.position.localeCompare(a.position);\n            });\n            sortOrder.position = ASC;\n            break;\n        case \"Office\":\n            if (sortOrder.office === ASC) {\n                people.sort(function(a, b) {\n                    return a.office.localeCompare(b.office);\n                });\n                sortOrder.office = DESC;\n                break;\n            }\n            people.sort(function(a, b) {\n                return b.office.localeCompare(a.office);\n            });\n            sortOrder.office = ASC;\n            break;\n        case \"Age\":\n            if (sortOrder.age === ASC) {\n                people.sort(function(a, b) {\n                    return a.age - b.age;\n                });\n                sortOrder.age = DESC;\n                break;\n            }\n            people.sort(function(a, b) {\n                return b.age - a.age;\n            });\n            sortOrder.age = ASC;\n            break;\n        case \"Salary\":\n            if (sortOrder.salary === ASC) {\n                people.sort(function(a, b) {\n                    return a.salary - b.salary;\n                });\n                sortOrder.salary = DESC;\n                break;\n            }\n            people.sort(function(a, b) {\n                return b.salary - a.salary;\n            });\n            sortOrder.salary = ASC;\n            break;\n    }\n    while(table.rows.length > 2)table.deleteRow(1);\n    people.forEach(function(person) {\n        var row = document.createElement(\"tr\");\n        var salary = person.salary.toLocaleString(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n        });\n        row.innerHTML = \"\\n      <td>\".concat(person.name, \"</td>\\n      <td>\").concat(person.position, \"</td>\\n      <td>\").concat(person.office, \"</td>\\n      <td>\").concat(person.age, \"</td>\\n      <td>\").concat(salary, \"</td>\\n    \");\n        table.insertBefore(row, table.lastElementChild);\n    });\n};\nvar addEventListeners = function() {\n    headers.forEach(function(header) {\n        header.addEventListener(\"click\", function(e) {\n            return handleSort(e);\n        });\n    });\n};\ninitializePeopleArray();\naddEventListeners();\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\nvar attributes = [\n    \"name\",\n    \"position\",\n    \"office\",\n    \"age\",\n    \"salary\"\n];\nattributes.forEach(function(item) {\n    var capitalize = function(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    };\n    var label = document.createElement(\"label\");\n    label.innerText = \"\".concat(capitalize(item), \":\");\n    label.setAttribute(\"for\", item);\n    if (item === \"office\") {\n        var select = document.createElement(\"select\");\n        var offices = [\n            \"Tokyo\",\n            \"Singapore\",\n            \"London\",\n            \"New York\",\n            \"Edinburgh\",\n            \"San Francisco\"\n        ];\n        select.setAttribute(\"name\", item);\n        select.setAttribute(\"data-qa\", item);\n        offices.forEach(function(office) {\n            var option = document.createElement(\"option\");\n            option.setAttribute(\"value\", office);\n            option.innerText = office;\n            select.id = item;\n            select.appendChild(option);\n            select.setAttribute(\"required\", \"true\");\n        });\n        label.appendChild(select);\n        form.appendChild(label);\n        return;\n    }\n    var input = document.createElement(\"input\");\n    input.setAttribute(\"name\", item);\n    input.setAttribute(\"data-qa\", item);\n    input.setAttribute(\"required\", \"true\");\n    input.id = item;\n    if (item === \"age\" || item === \"salary\") input.setAttribute(\"type\", \"number\");\n    else input.setAttribute(\"type\", \"text\");\n    label.appendChild(input);\n    form.appendChild(label);\n});\nvar button = document.createElement(\"button\");\nbutton.type = \"submit\";\nbutton.innerText = \"Save to table\";\nform.appendChild(button);\ndocument.body.appendChild(form);\nvar onSubmit = function(e) {\n    e.preventDefault();\n    var data = new FormData(form);\n    var isEmpty = attributes.some(function(item) {\n        var value = data.get(item).trim();\n        return value === \"\";\n    });\n    if (isEmpty) {\n        pushNotification(\"error\", \"All fields are required\");\n        return;\n    }\n    var newEmployee = {\n        name: data.get(\"name\").trim(),\n        position: data.get(\"position\").trim(),\n        office: data.get(\"office\").trim(),\n        age: parseInt(data.get(\"age\").trim()),\n        salary: parseFloat(data.get(\"salary\").trim())\n    };\n    if (newEmployee.name.length < 4) {\n        pushNotification(\"error\", \"Name value has less than 4 letters\");\n        return;\n    }\n    if (newEmployee.position.length < 1) {\n        pushNotification(\"error\", \"Position value can not be empty\");\n        return;\n    }\n    if (newEmployee.salary < 1) {\n        pushNotification(\"error\", \"Salary can not be empty\");\n        return;\n    }\n    if (newEmployee.age < 18 || newEmployee.age > 90) {\n        pushNotification(\"error\", \"Age value is less than 18 or more than 90\");\n        return;\n    }\n    people.push(newEmployee);\n    var row = document.createElement(\"tr\");\n    var salaryFormatted = newEmployee.salary.toLocaleString(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n    });\n    row.innerHTML = \"\\n    <td>\".concat(newEmployee.name, \"</td>\\n    <td>\").concat(newEmployee.position, \"</td>\\n    <td>\").concat(newEmployee.office, \"</td>\\n    <td>\").concat(newEmployee.age, \"</td>\\n    <td>\").concat(salaryFormatted, \"</td>\\n  \");\n    table.insertBefore(row, table.lastElementChild);\n    pushNotification(\"Success\", \"New employee is successfully added to the table\");\n    form.reset();\n};\nform.addEventListener(\"submit\", function(e) {\n    return onSubmit(e);\n});\ntable.addEventListener(\"click\", function(e) {\n    var value = e.target.innerText;\n    var target = e.target;\n    if (target.tagName.toLowerCase() !== \"td\") return;\n    var input = document.createElement(\"input\");\n    input.classList.add(\"cell-input\");\n    input.value = value;\n    target.innerHTML = \"\";\n    target.appendChild(input);\n    input.focus();\n    var validateInput = function(inputValue, column) {\n        switch(column){\n            case 0:\n                if (inputValue.length < 4) {\n                    pushNotification(\"error\", \"Name value must have at least 4 letters\");\n                    return false;\n                }\n                if (people.some(function(person) {\n                    return person.name === inputValue;\n                })) {\n                    pushNotification(\"error\", \"An employee with this name already exists\");\n                    return false;\n                }\n                break;\n            case 1:\n                if (inputValue.trim() === \"\") {\n                    pushNotification(\"error\", \"Position cannot be empty\");\n                    return false;\n                }\n                break;\n            case 2:\n                var validOffices = [\n                    \"Tokyo\",\n                    \"Singapore\",\n                    \"London\",\n                    \"New York\",\n                    \"Edinburgh\",\n                    \"San Francisco\"\n                ];\n                if (!validOffices.includes(inputValue)) {\n                    pushNotification(\"error\", \"Office must be one of the predefined options\");\n                    return false;\n                }\n                break;\n            case 3:\n                var age = parseInt(inputValue);\n                if (age < 18 || age > 90) {\n                    pushNotification(\"error\", \"Age value must be between 18 and 90\");\n                    return false;\n                }\n                break;\n            case 4:\n                var salary = parseFloat(inputValue.replace(/[$,]/g, \"\"));\n                if (isNaN(salary) || salary <= 0) {\n                    pushNotification(\"error\", \"Salary must be a positive number\");\n                    return false;\n                }\n                break;\n            default:\n                break;\n        }\n        return true;\n    };\n    var columnIndex = target.cellIndex;\n    input.addEventListener(\"blur\", function() {\n        var inputValue = input.value;\n        if (!validateInput(inputValue, columnIndex)) {\n            target.innerHTML = value;\n            return;\n        }\n        target.innerHTML = inputValue;\n        var rowIndex = target.parentElement.rowIndex - 1;\n        switch(columnIndex){\n            case 0:\n                people[rowIndex].name = inputValue;\n                break;\n            case 1:\n                people[rowIndex].position = inputValue;\n                break;\n            case 2:\n                people[rowIndex].office = inputValue;\n                break;\n            case 3:\n                people[rowIndex].age = parseInt(inputValue);\n                break;\n            case 4:\n                people[rowIndex].salary = parseFloat(inputValue.replace(/[$,]/g, \"\"));\n                break;\n            default:\n                break;\n        }\n    });\n    input.addEventListener(\"keydown\", function(ev) {\n        if (ev.key === \"Enter\") input.blur();\n    });\n});\n\n//# sourceMappingURL=index.e519e51e.js.map\n","'use strict';\n\nconst ASC = 'asc';\nconst DESC = 'desc';\n\nconst pushNotification = (type, description) => {\n  const message = document.createElement('div');\n  const title = type.charAt(0).toUpperCase() + type.slice(1);\n\n  message.classList.add('notification', type);\n\n  message.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  message.style.top = '10px';\n  message.style.right = '10px';\n\n  message.setAttribute('data-qa', 'notification');\n\n  document.body.append(message);\n\n  setTimeout(() => {\n    message.remove();\n  }, 2000);\n};\n\nconst table = document.querySelector('table');\nconst headers = document.querySelectorAll('th');\nconst people = [];\n\nconst sortOrder = {\n  name: ASC,\n  position: ASC,\n  office: ASC,\n  age: ASC,\n  salary: ASC,\n};\n\nconst initializePeopleArray = () => {\n  const trs = document.querySelectorAll('tr');\n\n  trs.forEach((item, index) => {\n    if (index === 0 || index === trs.length - 1) {\n      return;\n    }\n\n    item.addEventListener('click', () => {\n      trs.forEach((tr) => tr.classList.remove('active'));\n\n      item.classList.add('active');\n    });\n\n    const person = {\n      name: item.children[0].textContent,\n      position: item.children[1].textContent,\n      office: item.children[2].textContent,\n      age: parseInt(item.children[3].textContent),\n      salary: parseFloat(item.children[4].textContent.replace(/[$,]/g, '')),\n    };\n\n    people.push(person);\n  });\n};\n\nconst handleSort = (e) => {\n  switch (e.target.innerText) {\n    case 'Name':\n      if (sortOrder.name === ASC) {\n        people.sort((a, b) => a.name.localeCompare(b.name));\n        sortOrder.name = DESC;\n        break;\n      }\n\n      people.sort((a, b) => b.name.localeCompare(a.name));\n      sortOrder.name = ASC;\n      break;\n\n    case 'Position':\n      if (sortOrder.position === ASC) {\n        people.sort((a, b) => a.position.localeCompare(b.position));\n        sortOrder.position = DESC;\n        break;\n      }\n\n      people.sort((a, b) => b.position.localeCompare(a.position));\n      sortOrder.position = ASC;\n      break;\n\n    case 'Office':\n      if (sortOrder.office === ASC) {\n        people.sort((a, b) => a.office.localeCompare(b.office));\n        sortOrder.office = DESC;\n        break;\n      }\n\n      people.sort((a, b) => b.office.localeCompare(a.office));\n      sortOrder.office = ASC;\n      break;\n\n    case 'Age':\n      if (sortOrder.age === ASC) {\n        people.sort((a, b) => a.age - b.age);\n        sortOrder.age = DESC;\n        break;\n      }\n\n      people.sort((a, b) => b.age - a.age);\n      sortOrder.age = ASC;\n      break;\n\n    case 'Salary':\n      if (sortOrder.salary === ASC) {\n        people.sort((a, b) => a.salary - b.salary);\n        sortOrder.salary = DESC;\n        break;\n      }\n\n      people.sort((a, b) => b.salary - a.salary);\n      sortOrder.salary = ASC;\n      break;\n  }\n\n  while (table.rows.length > 2) {\n    table.deleteRow(1);\n  }\n\n  people.forEach((person) => {\n    const row = document.createElement('tr');\n\n    const salary = person.salary.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    });\n\n    row.innerHTML = `\n      <td>${person.name}</td>\n      <td>${person.position}</td>\n      <td>${person.office}</td>\n      <td>${person.age}</td>\n      <td>${salary}</td>\n    `;\n\n    table.insertBefore(row, table.lastElementChild);\n  });\n};\n\nconst addEventListeners = () => {\n  headers.forEach((header) => {\n    header.addEventListener('click', (e) => handleSort(e));\n  });\n};\n\ninitializePeopleArray();\naddEventListeners();\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nconst attributes = ['name', 'position', 'office', 'age', 'salary'];\n\nattributes.forEach((item) => {\n  const capitalize = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const label = document.createElement('label');\n\n  label.innerText = `${capitalize(item)}:`;\n  label.setAttribute('for', item);\n\n  if (item === 'office') {\n    const select = document.createElement('select');\n    const offices = [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ];\n\n    select.setAttribute('name', item);\n    select.setAttribute('data-qa', item);\n\n    offices.forEach((office) => {\n      const option = document.createElement('option');\n\n      option.setAttribute('value', office);\n      option.innerText = office;\n      select.id = item;\n      select.appendChild(option);\n      select.setAttribute('required', 'true');\n    });\n\n    label.appendChild(select);\n    form.appendChild(label);\n\n    return;\n  }\n\n  const input = document.createElement('input');\n\n  input.setAttribute('name', item);\n  input.setAttribute('data-qa', item);\n  input.setAttribute('required', 'true');\n  input.id = item;\n\n  if (item === 'age' || item === 'salary') {\n    input.setAttribute('type', 'number');\n  } else {\n    input.setAttribute('type', 'text');\n  }\n\n  label.appendChild(input);\n  form.appendChild(label);\n});\n\nconst button = document.createElement('button');\n\nbutton.type = 'submit';\nbutton.innerText = 'Save to table';\nform.appendChild(button);\n\ndocument.body.appendChild(form);\n\nconst onSubmit = (e) => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n\n  const isEmpty = attributes.some((item) => {\n    const value = data.get(item).trim();\n\n    return value === '';\n  });\n\n  if (isEmpty) {\n    pushNotification('error', 'All fields are required');\n\n    return;\n  }\n\n  const newEmployee = {\n    name: data.get('name').trim(),\n    position: data.get('position').trim(),\n    office: data.get('office').trim(),\n    age: parseInt(data.get('age').trim()),\n    salary: parseFloat(data.get('salary').trim()),\n  };\n\n  if (newEmployee.name.length < 4) {\n    pushNotification('error', 'Name value has less than 4 letters');\n\n    return;\n  }\n\n  if (newEmployee.position.length < 1) {\n    pushNotification('error', 'Position value can not be empty');\n\n    return;\n  }\n\n  if (newEmployee.salary < 1) {\n    pushNotification('error', 'Salary can not be empty');\n\n    return;\n  }\n\n  if (newEmployee.age < 18 || newEmployee.age > 90) {\n    pushNotification('error', 'Age value is less than 18 or more than 90');\n\n    return;\n  }\n\n  people.push(newEmployee);\n\n  const row = document.createElement('tr');\n\n  const salaryFormatted = newEmployee.salary.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n\n  row.innerHTML = `\n    <td>${newEmployee.name}</td>\n    <td>${newEmployee.position}</td>\n    <td>${newEmployee.office}</td>\n    <td>${newEmployee.age}</td>\n    <td>${salaryFormatted}</td>\n  `;\n\n  table.insertBefore(row, table.lastElementChild);\n\n  pushNotification(\n    'Success',\n    'New employee is successfully added to the table',\n  );\n\n  form.reset();\n};\n\nform.addEventListener('submit', (e) => onSubmit(e));\n\ntable.addEventListener('click', (e) => {\n  const value = e.target.innerText;\n  const target = e.target;\n\n  if (target.tagName.toLowerCase() !== 'td') {\n    return;\n  }\n\n  const input = document.createElement('input');\n\n  input.classList.add('cell-input');\n  input.value = value;\n  target.innerHTML = '';\n  target.appendChild(input);\n  input.focus();\n\n  const validateInput = (inputValue, column) => {\n    switch (column) {\n      case 0: // Name\n        if (inputValue.length < 4) {\n          pushNotification('error', 'Name value must have at least 4 letters');\n\n          return false;\n        }\n\n        if (people.some((person) => person.name === inputValue)) {\n          pushNotification(\n            'error',\n            'An employee with this name already exists',\n          );\n\n          return false;\n        }\n        break;\n      case 1: // Position\n        if (inputValue.trim() === '') {\n          pushNotification('error', 'Position cannot be empty');\n\n          return false;\n        }\n        break;\n      case 2: // Office\n        const validOffices = [\n          'Tokyo',\n          'Singapore',\n          'London',\n          'New York',\n          'Edinburgh',\n          'San Francisco',\n        ];\n\n        if (!validOffices.includes(inputValue)) {\n          pushNotification(\n            'error',\n            'Office must be one of the predefined options',\n          );\n\n          return false;\n        }\n        break;\n      case 3: // Age\n        const age = parseInt(inputValue);\n\n        if (age < 18 || age > 90) {\n          pushNotification('error', 'Age value must be between 18 and 90');\n\n          return false;\n        }\n        break;\n      case 4: // Salary\n        const salary = parseFloat(inputValue.replace(/[$,]/g, ''));\n\n        if (isNaN(salary) || salary <= 0) {\n          pushNotification('error', 'Salary must be a positive number');\n\n          return false;\n        }\n        break;\n      default:\n        break;\n    }\n\n    return true;\n  };\n\n  const columnIndex = target.cellIndex;\n\n  input.addEventListener('blur', () => {\n    const inputValue = input.value;\n\n    if (!validateInput(inputValue, columnIndex)) {\n      target.innerHTML = value;\n\n      return;\n    }\n\n    target.innerHTML = inputValue;\n\n    const rowIndex = target.parentElement.rowIndex - 1;\n\n    switch (columnIndex) {\n      case 0:\n        people[rowIndex].name = inputValue;\n        break;\n      case 1:\n        people[rowIndex].position = inputValue;\n        break;\n      case 2:\n        people[rowIndex].office = inputValue;\n        break;\n      case 3:\n        people[rowIndex].age = parseInt(inputValue);\n        break;\n      case 4:\n        people[rowIndex].salary = parseFloat(inputValue.replace(/[$,]/g, ''));\n        break;\n      default:\n        break;\n    }\n  });\n\n  input.addEventListener('keydown', (ev) => {\n    if (ev.key === 'Enter') {\n      input.blur();\n    }\n  });\n});\n"],"names":["trs","DESC","pushNotification","type","description","message","document","createElement","title","charAt","toUpperCase","slice","classList","add","innerHTML","concat","style","top","right","setAttribute","body","append","setTimeout","remove","table","querySelector","headers","querySelectorAll","people","sortOrder","name","position","office","age","salary","handleSort","e","target","innerText","sort","a","b","localeCompare","rows","length","deleteRow","forEach","person","row","toLocaleString","currency","minimumFractionDigits","maximumFractionDigits","insertBefore","lastElementChild","item","index","addEventListener","tr","children","textContent","parseInt","parseFloat","replace","push","header","form","attributes","label","str","select","offices","option","id","appendChild","input","button","onSubmit","preventDefault","data","FormData","some","value","get","trim","newEmployee","salaryFormatted","reset","tagName","toLowerCase","focus","validateInput","inputValue","column","validOffices","includes","isNaN","columnIndex","cellIndex","rowIndex","parentElement","ev","key","blur"],"version":3,"file":"index.e519e51e.js.map"}